// Mocks generated by Mockito 5.4.6 from annotations
// in supermercado_comparador/test/features/comparador/data/repositories/comparador_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supermercado_comparador/features/comparador/data/datasources/comparador_local_data_source.dart'
    as _i2;
import 'package:supermercado_comparador/features/comparador/data/models/producto_comparacion_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ComparadorLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockComparadorLocalDataSource extends _i1.Mock
    implements _i2.ComparadorLocalDataSource {
  MockComparadorLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ProductoComparacionModel>> buscarProductosSimilares(
          String? terminoBusqueda) =>
      (super.noSuchMethod(
        Invocation.method(
          #buscarProductosSimilares,
          [terminoBusqueda],
        ),
        returnValue: _i3.Future<List<_i4.ProductoComparacionModel>>.value(
            <_i4.ProductoComparacionModel>[]),
      ) as _i3.Future<List<_i4.ProductoComparacionModel>>);

  @override
  _i3.Future<List<_i4.ProductoComparacionModel>> compararPreciosProducto(
          int? productoId) =>
      (super.noSuchMethod(
        Invocation.method(
          #compararPreciosProducto,
          [productoId],
        ),
        returnValue: _i3.Future<List<_i4.ProductoComparacionModel>>.value(
            <_i4.ProductoComparacionModel>[]),
      ) as _i3.Future<List<_i4.ProductoComparacionModel>>);

  @override
  _i3.Future<List<_i4.ProductoComparacionModel>> buscarProductosPorQR(
          String? codigoQR) =>
      (super.noSuchMethod(
        Invocation.method(
          #buscarProductosPorQR,
          [codigoQR],
        ),
        returnValue: _i3.Future<List<_i4.ProductoComparacionModel>>.value(
            <_i4.ProductoComparacionModel>[]),
      ) as _i3.Future<List<_i4.ProductoComparacionModel>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> obtenerProductosSimilares(
          String? nombre) =>
      (super.noSuchMethod(
        Invocation.method(
          #obtenerProductosSimilares,
          [nombre],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);
}
