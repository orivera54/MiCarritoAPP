// Mocks generated by Mockito 5.4.6 from annotations
// in supermercado_comparador/test/features/calculadora/domain/usecases/guardar_lista_compra_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supermercado_comparador/features/calculadora/domain/entities/item_calculadora.dart'
    as _i3;
import 'package:supermercado_comparador/features/calculadora/domain/entities/lista_compra.dart'
    as _i2;
import 'package:supermercado_comparador/features/calculadora/domain/repositories/calculadora_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeListaCompra_0 extends _i1.SmartFake implements _i2.ListaCompra {
  _FakeListaCompra_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeItemCalculadora_1 extends _i1.SmartFake
    implements _i3.ItemCalculadora {
  _FakeItemCalculadora_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CalculadoraRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculadoraRepository extends _i1.Mock
    implements _i4.CalculadoraRepository {
  MockCalculadoraRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ListaCompra> createListaCompra(_i2.ListaCompra? listaCompra) =>
      (super.noSuchMethod(
        Invocation.method(
          #createListaCompra,
          [listaCompra],
        ),
        returnValue: _i5.Future<_i2.ListaCompra>.value(_FakeListaCompra_0(
          this,
          Invocation.method(
            #createListaCompra,
            [listaCompra],
          ),
        )),
      ) as _i5.Future<_i2.ListaCompra>);

  @override
  _i5.Future<List<_i2.ListaCompra>> getAllListasCompra() => (super.noSuchMethod(
        Invocation.method(
          #getAllListasCompra,
          [],
        ),
        returnValue:
            _i5.Future<List<_i2.ListaCompra>>.value(<_i2.ListaCompra>[]),
      ) as _i5.Future<List<_i2.ListaCompra>>);

  @override
  _i5.Future<_i2.ListaCompra?> getListaCompraById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getListaCompraById,
          [id],
        ),
        returnValue: _i5.Future<_i2.ListaCompra?>.value(),
      ) as _i5.Future<_i2.ListaCompra?>);

  @override
  _i5.Future<_i2.ListaCompra> updateListaCompra(_i2.ListaCompra? listaCompra) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateListaCompra,
          [listaCompra],
        ),
        returnValue: _i5.Future<_i2.ListaCompra>.value(_FakeListaCompra_0(
          this,
          Invocation.method(
            #updateListaCompra,
            [listaCompra],
          ),
        )),
      ) as _i5.Future<_i2.ListaCompra>);

  @override
  _i5.Future<void> deleteListaCompra(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteListaCompra,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.ItemCalculadora> addItemToLista(
    int? listaId,
    _i3.ItemCalculadora? item,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addItemToLista,
          [
            listaId,
            item,
          ],
        ),
        returnValue:
            _i5.Future<_i3.ItemCalculadora>.value(_FakeItemCalculadora_1(
          this,
          Invocation.method(
            #addItemToLista,
            [
              listaId,
              item,
            ],
          ),
        )),
      ) as _i5.Future<_i3.ItemCalculadora>);

  @override
  _i5.Future<_i3.ItemCalculadora> updateItemInLista(
          _i3.ItemCalculadora? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateItemInLista,
          [item],
        ),
        returnValue:
            _i5.Future<_i3.ItemCalculadora>.value(_FakeItemCalculadora_1(
          this,
          Invocation.method(
            #updateItemInLista,
            [item],
          ),
        )),
      ) as _i5.Future<_i3.ItemCalculadora>);

  @override
  _i5.Future<void> removeItemFromLista(int? itemId) => (super.noSuchMethod(
        Invocation.method(
          #removeItemFromLista,
          [itemId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.ItemCalculadora>> getItemsForLista(int? listaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getItemsForLista,
          [listaId],
        ),
        returnValue: _i5.Future<List<_i3.ItemCalculadora>>.value(
            <_i3.ItemCalculadora>[]),
      ) as _i5.Future<List<_i3.ItemCalculadora>>);

  @override
  _i5.Future<_i2.ListaCompra?> getCurrentActiveLista() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentActiveLista,
          [],
        ),
        returnValue: _i5.Future<_i2.ListaCompra?>.value(),
      ) as _i5.Future<_i2.ListaCompra?>);

  @override
  _i5.Future<_i2.ListaCompra> saveCurrentActiveLista(
          _i2.ListaCompra? listaCompra) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCurrentActiveLista,
          [listaCompra],
        ),
        returnValue: _i5.Future<_i2.ListaCompra>.value(_FakeListaCompra_0(
          this,
          Invocation.method(
            #saveCurrentActiveLista,
            [listaCompra],
          ),
        )),
      ) as _i5.Future<_i2.ListaCompra>);

  @override
  _i5.Future<void> clearCurrentActiveLista() => (super.noSuchMethod(
        Invocation.method(
          #clearCurrentActiveLista,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.ListaCompra?> getCurrentActiveListaForAlmacen(
          int? almacenId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentActiveListaForAlmacen,
          [almacenId],
        ),
        returnValue: _i5.Future<_i2.ListaCompra?>.value(),
      ) as _i5.Future<_i2.ListaCompra?>);

  @override
  _i5.Future<_i2.ListaCompra> saveCurrentActiveListaForAlmacen(
    _i2.ListaCompra? listaCompra,
    int? almacenId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCurrentActiveListaForAlmacen,
          [
            listaCompra,
            almacenId,
          ],
        ),
        returnValue: _i5.Future<_i2.ListaCompra>.value(_FakeListaCompra_0(
          this,
          Invocation.method(
            #saveCurrentActiveListaForAlmacen,
            [
              listaCompra,
              almacenId,
            ],
          ),
        )),
      ) as _i5.Future<_i2.ListaCompra>);

  @override
  _i5.Future<void> clearCurrentActiveListaForAlmacen(int? almacenId) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCurrentActiveListaForAlmacen,
          [almacenId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
