// Mocks generated by Mockito 5.4.6 from annotations
// in supermercado_comparador/test/features/productos/domain/usecases/search_productos_by_name_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supermercado_comparador/features/productos/domain/entities/producto.dart'
    as _i2;
import 'package:supermercado_comparador/features/productos/domain/repositories/producto_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProducto_0 extends _i1.SmartFake implements _i2.Producto {
  _FakeProducto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductoRepository extends _i1.Mock
    implements _i3.ProductoRepository {
  MockProductoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Producto>> getAllProductos() => (super.noSuchMethod(
        Invocation.method(
          #getAllProductos,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Producto>>.value(<_i2.Producto>[]),
      ) as _i4.Future<List<_i2.Producto>>);

  @override
  _i4.Future<List<_i2.Producto>> getProductosByAlmacen(int? almacenId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductosByAlmacen,
          [almacenId],
        ),
        returnValue: _i4.Future<List<_i2.Producto>>.value(<_i2.Producto>[]),
      ) as _i4.Future<List<_i2.Producto>>);

  @override
  _i4.Future<List<_i2.Producto>> getProductosByCategoria(int? categoriaId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductosByCategoria,
          [categoriaId],
        ),
        returnValue: _i4.Future<List<_i2.Producto>>.value(<_i2.Producto>[]),
      ) as _i4.Future<List<_i2.Producto>>);

  @override
  _i4.Future<_i2.Producto?> getProductoById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getProductoById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Producto?>.value(),
      ) as _i4.Future<_i2.Producto?>);

  @override
  _i4.Future<List<_i2.Producto>> searchProductosByName(String? searchTerm) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchProductosByName,
          [searchTerm],
        ),
        returnValue: _i4.Future<List<_i2.Producto>>.value(<_i2.Producto>[]),
      ) as _i4.Future<List<_i2.Producto>>);

  @override
  _i4.Future<_i2.Producto?> getProductoByQR(String? codigoQR) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductoByQR,
          [codigoQR],
        ),
        returnValue: _i4.Future<_i2.Producto?>.value(),
      ) as _i4.Future<_i2.Producto?>);

  @override
  _i4.Future<_i2.Producto> createProducto(_i2.Producto? producto) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProducto,
          [producto],
        ),
        returnValue: _i4.Future<_i2.Producto>.value(_FakeProducto_0(
          this,
          Invocation.method(
            #createProducto,
            [producto],
          ),
        )),
      ) as _i4.Future<_i2.Producto>);

  @override
  _i4.Future<_i2.Producto> updateProducto(_i2.Producto? producto) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProducto,
          [producto],
        ),
        returnValue: _i4.Future<_i2.Producto>.value(_FakeProducto_0(
          this,
          Invocation.method(
            #updateProducto,
            [producto],
          ),
        )),
      ) as _i4.Future<_i2.Producto>);

  @override
  _i4.Future<void> deleteProducto(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteProducto,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> qrExistsInAlmacen(
    String? codigoQR,
    int? almacenId, {
    int? excludeId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #qrExistsInAlmacen,
          [
            codigoQR,
            almacenId,
          ],
          {#excludeId: excludeId},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getProductosWithDetails() =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductosWithDetails,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<_i2.Producto>> searchProductosWithFilters({
    String? searchTerm,
    int? almacenId,
    int? categoriaId,
    double? minPrice,
    double? maxPrice,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchProductosWithFilters,
          [],
          {
            #searchTerm: searchTerm,
            #almacenId: almacenId,
            #categoriaId: categoriaId,
            #minPrice: minPrice,
            #maxPrice: maxPrice,
          },
        ),
        returnValue: _i4.Future<List<_i2.Producto>>.value(<_i2.Producto>[]),
      ) as _i4.Future<List<_i2.Producto>>);
}
