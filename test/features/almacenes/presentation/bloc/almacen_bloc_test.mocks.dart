// Mocks generated by Mockito 5.4.6 from annotations
// in supermercado_comparador/test/features/almacenes/presentation/bloc/almacen_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supermercado_comparador/features/almacenes/domain/entities/almacen.dart'
    as _i3;
import 'package:supermercado_comparador/features/almacenes/domain/repositories/almacen_repository.dart'
    as _i2;
import 'package:supermercado_comparador/features/almacenes/domain/usecases/create_almacen.dart'
    as _i7;
import 'package:supermercado_comparador/features/almacenes/domain/usecases/delete_almacen.dart'
    as _i9;
import 'package:supermercado_comparador/features/almacenes/domain/usecases/get_all_almacenes.dart'
    as _i4;
import 'package:supermercado_comparador/features/almacenes/domain/usecases/get_almacen_by_id.dart'
    as _i6;
import 'package:supermercado_comparador/features/almacenes/domain/usecases/update_almacen.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAlmacenRepository_0 extends _i1.SmartFake
    implements _i2.AlmacenRepository {
  _FakeAlmacenRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAlmacen_1 extends _i1.SmartFake implements _i3.Almacen {
  _FakeAlmacen_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetAllAlmacenes].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllAlmacenes extends _i1.Mock implements _i4.GetAllAlmacenes {
  MockGetAllAlmacenes() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AlmacenRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAlmacenRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AlmacenRepository);

  @override
  _i5.Future<List<_i3.Almacen>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Almacen>>.value(<_i3.Almacen>[]),
      ) as _i5.Future<List<_i3.Almacen>>);
}

/// A class which mocks [GetAlmacenById].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAlmacenById extends _i1.Mock implements _i6.GetAlmacenById {
  MockGetAlmacenById() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AlmacenRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAlmacenRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AlmacenRepository);

  @override
  _i5.Future<_i3.Almacen?> call(int? id) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [id],
        ),
        returnValue: _i5.Future<_i3.Almacen?>.value(),
      ) as _i5.Future<_i3.Almacen?>);
}

/// A class which mocks [CreateAlmacen].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateAlmacen extends _i1.Mock implements _i7.CreateAlmacen {
  MockCreateAlmacen() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AlmacenRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAlmacenRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AlmacenRepository);

  @override
  _i5.Future<_i3.Almacen> call(_i3.Almacen? almacen) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [almacen],
        ),
        returnValue: _i5.Future<_i3.Almacen>.value(_FakeAlmacen_1(
          this,
          Invocation.method(
            #call,
            [almacen],
          ),
        )),
      ) as _i5.Future<_i3.Almacen>);
}

/// A class which mocks [UpdateAlmacen].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateAlmacen extends _i1.Mock implements _i8.UpdateAlmacen {
  MockUpdateAlmacen() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AlmacenRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAlmacenRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AlmacenRepository);

  @override
  _i5.Future<_i3.Almacen> call(_i3.Almacen? almacen) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [almacen],
        ),
        returnValue: _i5.Future<_i3.Almacen>.value(_FakeAlmacen_1(
          this,
          Invocation.method(
            #call,
            [almacen],
          ),
        )),
      ) as _i5.Future<_i3.Almacen>);
}

/// A class which mocks [DeleteAlmacen].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteAlmacen extends _i1.Mock implements _i9.DeleteAlmacen {
  MockDeleteAlmacen() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AlmacenRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAlmacenRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AlmacenRepository);

  @override
  _i5.Future<void> call(int? id) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
