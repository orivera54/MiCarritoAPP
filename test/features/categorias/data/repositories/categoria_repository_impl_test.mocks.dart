// Mocks generated by Mockito 5.4.6 from annotations
// in supermercado_comparador/test/features/categorias/data/repositories/categoria_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supermercado_comparador/features/categorias/data/datasources/categoria_local_data_source.dart'
    as _i3;
import 'package:supermercado_comparador/features/categorias/data/models/categoria_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCategoriaModel_0 extends _i1.SmartFake
    implements _i2.CategoriaModel {
  _FakeCategoriaModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CategoriaLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoriaLocalDataSource extends _i1.Mock
    implements _i3.CategoriaLocalDataSource {
  MockCategoriaLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.CategoriaModel>> getAllCategorias() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCategorias,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.CategoriaModel>>.value(<_i2.CategoriaModel>[]),
      ) as _i4.Future<List<_i2.CategoriaModel>>);

  @override
  _i4.Future<_i2.CategoriaModel?> getCategoriaById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategoriaById,
          [id],
        ),
        returnValue: _i4.Future<_i2.CategoriaModel?>.value(),
      ) as _i4.Future<_i2.CategoriaModel?>);

  @override
  _i4.Future<_i2.CategoriaModel?> getCategoriaByName(String? nombre) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategoriaByName,
          [nombre],
        ),
        returnValue: _i4.Future<_i2.CategoriaModel?>.value(),
      ) as _i4.Future<_i2.CategoriaModel?>);

  @override
  _i4.Future<_i2.CategoriaModel> insertCategoria(
          _i2.CategoriaModel? categoria) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCategoria,
          [categoria],
        ),
        returnValue: _i4.Future<_i2.CategoriaModel>.value(_FakeCategoriaModel_0(
          this,
          Invocation.method(
            #insertCategoria,
            [categoria],
          ),
        )),
      ) as _i4.Future<_i2.CategoriaModel>);

  @override
  _i4.Future<_i2.CategoriaModel> updateCategoria(
          _i2.CategoriaModel? categoria) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategoria,
          [categoria],
        ),
        returnValue: _i4.Future<_i2.CategoriaModel>.value(_FakeCategoriaModel_0(
          this,
          Invocation.method(
            #updateCategoria,
            [categoria],
          ),
        )),
      ) as _i4.Future<_i2.CategoriaModel>);

  @override
  _i4.Future<void> deleteCategoria(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategoria,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> categoriaNameExists(
    String? nombre, {
    int? excludeId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #categoriaNameExists,
          [nombre],
          {#excludeId: excludeId},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
