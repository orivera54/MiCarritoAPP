// Mocks generated by Mockito 5.4.6 from annotations
// in supermercado_comparador/test/features/categorias/domain/usecases/create_categoria_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supermercado_comparador/features/categorias/domain/entities/categoria.dart'
    as _i2;
import 'package:supermercado_comparador/features/categorias/domain/repositories/categoria_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCategoria_0 extends _i1.SmartFake implements _i2.Categoria {
  _FakeCategoria_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CategoriaRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoriaRepository extends _i1.Mock
    implements _i3.CategoriaRepository {
  MockCategoriaRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Categoria>> getAllCategorias() => (super.noSuchMethod(
        Invocation.method(
          #getAllCategorias,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Categoria>>.value(<_i2.Categoria>[]),
      ) as _i4.Future<List<_i2.Categoria>>);

  @override
  _i4.Future<_i2.Categoria?> getCategoriaById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getCategoriaById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Categoria?>.value(),
      ) as _i4.Future<_i2.Categoria?>);

  @override
  _i4.Future<_i2.Categoria?> getCategoriaByName(String? nombre) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategoriaByName,
          [nombre],
        ),
        returnValue: _i4.Future<_i2.Categoria?>.value(),
      ) as _i4.Future<_i2.Categoria?>);

  @override
  _i4.Future<_i2.Categoria> createCategoria(_i2.Categoria? categoria) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCategoria,
          [categoria],
        ),
        returnValue: _i4.Future<_i2.Categoria>.value(_FakeCategoria_0(
          this,
          Invocation.method(
            #createCategoria,
            [categoria],
          ),
        )),
      ) as _i4.Future<_i2.Categoria>);

  @override
  _i4.Future<_i2.Categoria> updateCategoria(_i2.Categoria? categoria) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategoria,
          [categoria],
        ),
        returnValue: _i4.Future<_i2.Categoria>.value(_FakeCategoria_0(
          this,
          Invocation.method(
            #updateCategoria,
            [categoria],
          ),
        )),
      ) as _i4.Future<_i2.Categoria>);

  @override
  _i4.Future<void> deleteCategoria(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategoria,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> categoriaNameExists(
    String? nombre, {
    int? excludeId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #categoriaNameExists,
          [nombre],
          {#excludeId: excludeId},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.Categoria> ensureDefaultCategory() => (super.noSuchMethod(
        Invocation.method(
          #ensureDefaultCategory,
          [],
        ),
        returnValue: _i4.Future<_i2.Categoria>.value(_FakeCategoria_0(
          this,
          Invocation.method(
            #ensureDefaultCategory,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Categoria>);
}
